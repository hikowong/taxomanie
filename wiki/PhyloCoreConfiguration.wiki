#summary how-to configure phylocore
#labels Phase-Deploy,Featured

Phylocore needs a database. In this section, you'll see how-to configure phylocore and how-to prepopulate the database.

Go to the folder phylocore. You should see a file named 'settings.py'. This is the "control center" of PhyloCore. Open this file. And you should see something like that:

{{{
DATABASE_ENGINE = 'sqlite3'    # 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3'
DATABASE_NAME = ''             # Or path to database file if using sqlite3.
DATABASE_USER = ''             # Not used with sqlite3.
DATABASE_PASSWORD = ''         # Not used with sqlite3.
DATABASE_HOST = ''             # Set to empty string for localhost. Not used with sqlite3.
DATABASE_PORT = ''             # Set to empty string for default. Not used with sqlite3.
}}}

 * choose your database backend (sqlite3 by default) in the DATABASE_ENGIN.
 * put the name of the database or the full path of the sqlite3 file


== With a sqlite database ==
exemple with sqlite3:

{{{
DATABASE_ENGINE = 'sqlite3'    # 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3'
DATABASE_NAME = '/path/to/database_name.db'             # Or path to database file if using sqlite3.
DATABASE_USER = ''             # Not used with sqlite3.
DATABASE_PASSWORD = ''         # Not used with sqlite3.
DATABASE_HOST = ''             # Set to empty string for localhost. Not used with sqlite3.
DATABASE_PORT = ''             # Set to empty string for default. Not used with sqlite3.
}}}

== With a mysql database ==

{{{
DATABASE_ENGINE = 'mysql'    # 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3'
DATABASE_NAME = 'database_name'             # Or path to database file if using sqlite3.
DATABASE_USER = 'root'             # Not used with sqlite3.
DATABASE_PASSWORD = 'passwd'         # Not used with sqlite3.
DATABASE_HOST = ''             # Set to empty string for localhost. Not used with sqlite3.
DATABASE_PORT = ''             # Set to empty string for default. Not used with sqlite3.
}}}

if you're using mysql you must fill the following fields:

 * DATABASE_USER the user of the database
 * DATABASE_PASSWORD no comment...

and optionnaly the DATABASE_HOST and DATABASE_PORT is there different than default values.

Now we can create the database structure. Note that if you use mysql, the database must be created :

{{{
mysql -u user -p -e "CREATE DATABASE database_name CHARACTER SET utf8;"
}}}

Utf-8 is important as django stores all it's data into this charset.

{{{
python manage.py syncdb
}}}

Then, we have to load the taxonomy into our fresh database: Then launch

{{{
python manage.py loadtaxonomy
}}}

This will load all data from the `dumps` folder provides by djangophylocore.
Loading taxonomy can take a while (half hour with a core 2 duo) so please, be patient...

When it's done, you can test your configuration with
{{{
python -c "from phylocore import *;print Taxa.objects.all().count()"
}}}

wich will return the number of taxa present in the taxonomy (>800000).

Congratulation ! Now you can follow the [PhyloCoreTutorial tutorial]